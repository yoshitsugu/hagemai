Elm.Combine = Elm.Combine || {};
Elm.Combine.Num = Elm.Combine.Num || {};
Elm.Combine.Num.make = function (_elm) {
   "use strict";
   _elm.Combine = _elm.Combine || {};
   _elm.Combine.Num = _elm.Combine.Num || {};
   if (_elm.Combine.Num.values) return _elm.Combine.Num.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Char = Elm.Char.make(_elm),
   $Combine = Elm.Combine.make(_elm),
   $Combine$Char = Elm.Combine.Char.make(_elm),
   $Combine$Infix = Elm.Combine.Infix.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $String = Elm.String.make(_elm);
   var _op = {};
   var digit = function () {
      var toDigit = function (c) {    return $Char.toCode(c) - $Char.toCode(_U.chr("0"));};
      return A2($Combine$Infix._op["<$>"],toDigit,$Combine$Char.digit);
   }();
   var sign = A2($Combine.optional,
   1,
   $Combine.choice(_U.list([A2($Combine$Infix._op["<$"],1,$Combine.string("+")),A2($Combine$Infix._op["<$"],-1,$Combine.string("-"))])));
   var unwrap = F2(function (f,s) {
      var _p0 = f(s);
      if (_p0.ctor === "Ok") {
            return _p0._0;
         } else {
            return _U.crashCase("Combine.Num",{start: {line: 19,column: 3},end: {line: 24,column: 51}},_p0)(A2($Basics._op["++"],
            "impossible state: ",
            $Basics.toString(_p0._0)));
         }
   });
   var toInt = unwrap($String.toInt);
   var $int = A2($Combine.andMap,
   A2($Combine.map,F2(function (x,y) {    return x * y;}),sign),
   A2($Combine$Infix._op["<$>"],toInt,$Combine.regex("(0|[1-9][0-9]*)")));
   var toFloat = unwrap($String.toFloat);
   var $float = A2($Combine.andMap,
   A2($Combine.map,function (_p2) {    return F2(function (x,y) {    return x * y;})($Basics.toFloat(_p2));},sign),
   A2($Combine$Infix._op["<$>"],toFloat,$Combine.regex("(0|[1-9][0-9]*)(\\.[0-9]+)")));
   return _elm.Combine.Num.values = {_op: _op,sign: sign,digit: digit,$int: $int,$float: $float};
};